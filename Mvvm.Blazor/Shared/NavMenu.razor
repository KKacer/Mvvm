@using Mvvm.Business
@inject NavMenuViewModel ViewModel

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Mvvm.Blazor</a>
    <button class="navbar-toggler" @onclick="ViewModel.ToggleNavMenuCommand.Execute">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ViewModel.ToggleNavMenuCommand.Execute">
    <ul class="nav flex-column">
        @foreach (var target in ViewModel.NavTargets)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@target.Link"
                         Match="@(target.Link == "" ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                    <span class="@GetClass(target.ClassType)" aria-hidden="true"></span> @target.Label
                </NavLink>
            </li>    
        }
    </ul>
</div>

@code {
    private string NavMenuCssClass => ViewModel.CollapseNavMenu ? "collapse" : null;
    private void ToggleNavMenu()
    {
        ViewModel.CollapseNavMenu = !ViewModel.CollapseNavMenu;
    }


    private string GetClass(ClassDisplayType classType)
    {
        switch (classType)
        {
            case ClassDisplayType.Home:
                return "oi oi-home";
            case ClassDisplayType.Counter:
                return "oi oi-plus";
            case ClassDisplayType.List:
                return "oi oi-list-rich";
        }

        return null;
    }
}